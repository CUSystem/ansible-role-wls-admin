#
# WLST script to create a basic domain and admin server.
#
# Templated for Ansible
#
# Steve.Taylor@cu.edu Mar-2016
#

print('Load the basic template')
selectTemplate('Basic WebLogic Server Domain')
loadTemplates()

print('Set options')
setOption('JavaHome', '{{ java_home }}')
setOption('ServerStartMode','prod')
setOption('OverwriteDomain', 'true')

print('Create the admin server')
cd('/Servers/AdminServer')
cmo.setListenAddress('{{ ansible_fqdn }}')
set('ListenPort', 7001)
set('WeblogicPluginEnabled', true)
cmo.setKeyStores('CustomIdentityAndJavaStandardTrust')
cmo.setCustomIdentityKeyStoreFileName('{{ identity_keystore_file }}')
cmo.setCustomIdentityKeyStoreType('JKS')
cmo.setCustomIdentityKeyStorePassPhraseEncrypted('{{ keystore_password }}')
cmo.setJavaStandardTrustKeyStorePassPhraseEncrypted('changeit')

print('Set startup args')
cd('/Servers/AdminServer')
create('AdminServer','ServerStart')
cd('ServerStart/AdminServer')
set('Arguments', '-Xms2048m -Xmx2048m -Dweblogic.security.SSL.protocolVersion=TLS1')
set('JavaVendor','Sun')
set('JavaHome', '{{ java_home }}')

print('Create the SSL side')
cd('/Servers/AdminServer')
create('AdminServer','SSL')
cd('SSL/AdminServer')
set('Enabled', 'True')
set('ListenPort', 7002)

print('Set the username/password')
cd('/Security/base_domain/User/weblogic')
cmo.setPassword('{{ weblogic_password }}')

print('Write the domain')
writeDomain('{{ domain_home }}')
closeTemplate()

print('Finalize the admin server')
readDomain('{{ domain_home }}')

print('Set nodemanager infor for domain')
cd('/SecurityConfiguration/{{ domain_name }}')
cmo.setNodeManagerUsername('{{ weblogic_user }}')
cmo.setNodeManagerPasswordEncrypted('{{ weblogic_password }}')

print('Set SSL and no hostname validation')
cd('/Servers/AdminServer')
create('AdminServer','SSL')
cd('SSL/AdminServer')
cmo.setServerPrivateKeyAlias('{{ ansible_fqdn }}')
cmo.setServerPrivateKeyPassPhraseEncrypted('{{ keystore_password }}')
#cmo.setHostnameVerificationIgnored(true)
#cmo.setHostnameVerifier(None)
cmo.setTwoWaySSLEnabled(false)
cmo.setClientCertificateEnforced(false)

print('set authentication flags')
cd('/SecurityConfiguration/{{ domain_name }}/Realms/myrealm')
cd('AuthenticationProviders/DefaultAuthenticator')
set('ControlFlag', 'SUFFICIENT')

#print('Create admin machine')
cd('/')
create('{{ ansible_fqdn }}','UnixMachine')
cd('Machines/{{ ansible_fqdn }}')
set('PostBindGIDEnabled',false)
set('PostBindGIDEnabled',false)

create('{{ ansible_fqdn }}','NodeManager')
cd('NodeManager/{{ ansible_fqdn }}')
set('NMType','SSL')
set('ListenAddress','{{ ansible_fqdn }}')
set('ListenPort',5556)

#assign AdminServer to the machine
cd('/Servers/AdminServer')
set('Machine','{{ ansible_fqdn }}')

updateDomain()
closeDomain()

exit()
