---

#
# Assumes keys and certs live under /etc/pki/tls/{private/certs}
#

- stat: path={{ private_key_file }}
  register: does_private_key_exist

- stat: path={{ public_cert_file }}
  register: does_public_cert_exist

- name: stop if the TLS key hasn't been cut for this machine
  fail: msg="Cannot find the private key for this machine."
  when: "{{ does_private_key_exist.stat.exists }} == False"

- name: stop if the TLS cert hasn't been cut for this machine
  fail: msg="Cannot find the public cert for this machine."
  when: "{{ does_public_cert_exist.stat.exists }} == False"

#####
##### You need the root and intermediates for the chain here.
##### Mine is saved under the /files folder of the Ansible project and I copy it here.
#####
- name: copy chain bundle
  copy: src=files/bundle.crt dest=/tmp/bundle.crt mode=0444

- name: create p12 keystore file
  command: openssl pkcs12 -export -chain -in "{{ public_cert_file }}" -inkey "{{ private_key_file }}" -out "{{ tls_path }}/misc/keystore.p12" -CAfile /tmp/bundle.crt -name {{ ansible_fqdn }} -passout pass:{{ keystore_password }}

- name: remove JKS
  file: path="{{ tls_path }}/misc/keystore.jks" state=absent

- name: convert p12 to jks
  command: /usr/java/latest/bin/keytool -importkeystore -deststorepass {{ keystore_password }} -destkeystore {{ tls_path }}/misc/keystore.jks -srckeystore {{ tls_path }}/misc/keystore.p12 -srcstoretype PKCS12 -srcstorepass {{ keystore_password }} -alias {{ ansible_fqdn }} -noprompt

- name: remove the p12 now
  file: path="{{ tls_path }}/misc/keystore.p12" state=absent

- name: move the keystore to the /home/oracle folder
  command: mv {{ tls_path }}/misc/keystore.jks {{ identity_keystore }} warn=no

- name: change ownership and permissions
  file: path="{{ identity_keystore }}" owner=oracle group=oinstall mode=0600
